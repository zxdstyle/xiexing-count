!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("Point",[],t):"object"==typeof exports?exports.Point=t():e.Point=t()}(window,function(){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),o=n(2),l=n(3),r=n(4),u=n(5),s=n(6),a=n(7),_=n(8),f=n(9),d=n(10),c=n(11),p={age:i.default,education:o.default,professional_skills:l.default,social_security:r.default,hign_social_security:u.default,reward:s.default,business:a.default,innovative_entrepreneurial_talent:_.default,needed_professional:f.default,hard_word:d.default,violation_of_law:c.default},v=function(){return function(){var e=this;this.age=null,this.education=null,this.professional_skills=null,this.social_security=null,this.hign_social_security=null,this.reward=null,this.business=null,this.innovative_entrepreneurial_talent=null,this.needed_professional=null,this.hard_word=null,this.violation_of_law=null,this.items=["age","education","professional_skills","social_security","hign_social_security","reward","business","innovative_entrepreneurial_talent","needed_professional","hard_word","violation_of_law"],this.temp={},this.age_point=0,this.education_point=0,this.professional_skills_point=0,this.social_security_point=0,this.hign_social_security_point=0,this.reward_point=0,this.business_point=0,this.innovative_entrepreneurial_talent_point=0,this.needed_professional_point=0,this.hard_word_point=0,this.violation_of_law_point=0,this.total_point=0,this.items.forEach(function(t){Object.defineProperty(e,t,{get:function(){return this.temp[t]},set:function(e){var n=this;this.temp[t]=e,this[t+"_point"]=p[t](e);var i=0;this.items.forEach(function(e){i=n[e+"_point"]+i}),i-=this.education_point>this.professional_skills_point?this.professional_skills_point:this.education_point,this.total_point=i<0?0:i}})})}}();t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return void 0===e&&(e=0),e>=18&&e<=43?30:e>=56&&e<=60?5:{44:29,45:27,46:25,47:23,48:21,49:19,50:17,51:15,52:13,53:11,54:9,55:7}[e]||0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return void 0===e&&(e=null),{below_high_school:0,college:50,bachelor:60,bachelor_degree:90,master:100,doctor:110}[e]||0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return void 0===e&&(e=null),("level_2"!=e.level&&"level_1"!=e.level||e.level_4_5_needed)&&{level_5:15,level_4:30,level_3:60,level_2:100,level_1:140,level_0:0}[e.level]||0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return void 0===e&&(e=0),3*e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return void 0===e&&(e=null),{level_1:0,level_2:25,level_3:50,level_4:100,level_5:120,level_0:0}[e]||0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return void 0===e&&(e=null),{level_1:30,level_2:60,level_3:110,level_0:0}[e]||0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){if(0===e.type)return 0;e.tax_amount=e.tax_amount||0,e.employees_num=e.employees_num||0,e.share_ratio=e.share_ratio||0;var t=e.tax_amount>e.employees_num?e.tax_amount:e.employees_num,n=10*Math.floor(t/10)*e.share_ratio/100;return(n=Math.floor(n))>120?120:n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.innovation||e.entrepreneurship?120:0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(e.graduation?30:0)+(e.needed_professional?10:0)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.port_work||0,n=e.sanitation_work||0,i=0;t>=5&&(i=4*t);var o=0;return n>=5&&n<=10?o=2*n:n>10&&(o=20),i+o}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return-150*(e.false_material||0)+-50*(e.detention||0)}}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,